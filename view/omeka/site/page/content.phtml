<?php

use Omeka\Api\Representation\SitePageBlockRepresentation;
use Omeka\Api\Representation\SitePageRepresentation;

/**
 * @var SitePageRepresentation $page
 * @var SitePageBlockRepresentation $block
 */

function _templateToCamel($input)
{
    return lcfirst(str_replace(' ', '', ucwords(str_replace('-', ' ', $input))));
}

$layouts = [];
foreach ($page->blocks() as $block):

    // prepare render of block (only once)
    if (!array_key_exists($block->layout(), $layouts)) {
        $layouts[$block->layout()] = null;
        $this->blockLayout()->prepareRender($block->layout());
    }

    $blockLayout = $block->layout();
    $blockLayout = str_replace(['itemShowCase'], ['itemShowcase'], $blockLayout);
    $blockLayoutClass = strtolower(preg_replace('/([A-Z]+)/', '-${1}', $blockLayout));

    // default block classes
    $blockClasses = [
            "block",
            "block--{$blockLayoutClass}"
    ];
    // add custom class
    if ( $divclass = $block->dataValue('divclass', null) ) {
        $blockClasses[] = $divclass;
    }
    // add class based on template name
    if ( $template = $block->dataValue('template', null) ) {
        $templateClass = str_replace(' ', '-', array_reverse(explode(DIRECTORY_SEPARATOR, $template))[0]);
        $templateClass = ltrim(str_replace($blockLayoutClass, '', $templateClass),'- ');
        $blockClasses[] = "block--{$blockLayoutClass}--{$templateClass}";
    }

    $blockClasses = implode(' ', $blockClasses);

    // render
    ?>
    <div class="<?= $blockClasses ?>">
        <div class="container">
            <?= $this->blockLayout()->render($block); ?>
        </div>
    </div>
<?php endforeach; ?>
